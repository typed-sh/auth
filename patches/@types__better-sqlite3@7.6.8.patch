diff --git a/index.d.ts b/index.d.ts
index 84bd42a88665667e7fd9ecf206d68cc51e12f6d0..68ec973ec7f9ae4dfbdc143a469120569f2cbbb3 100644
--- a/index.d.ts
+++ b/index.d.ts
@@ -6,7 +6,7 @@ type ArgumentTypes<F extends VariableArgFunction> = F extends (...args: infer A)
 type ElementOf<T> = T extends Array<infer E> ? E : T;
 
 declare namespace BetterSqlite3 {
-    interface Statement<BindParameters extends unknown[]> {
+    interface Statement<BindParameters extends unknown[], ReturnObject = unknown> {
         database: Database;
         source: string;
         reader: boolean;
@@ -14,9 +14,9 @@ declare namespace BetterSqlite3 {
         busy: boolean;
 
         run(...params: BindParameters): Database.RunResult;
-        get(...params: BindParameters): unknown;
-        all(...params: BindParameters): unknown[];
-        iterate(...params: BindParameters): IterableIterator<unknown>;
+        get(...params: BindParameters): ReturnObject | undefined;
+        all(...params: BindParameters): ReturnObject[];
+        iterate(...params: BindParameters): IterableIterator<ReturnObject>;
         pluck(toggleState?: boolean): this;
         expand(toggleState?: boolean): this;
         raw(toggleState?: boolean): this;
@@ -56,9 +56,9 @@ declare namespace BetterSqlite3 {
         open: boolean;
         inTransaction: boolean;
 
-        prepare<BindParameters extends unknown[] | {} = unknown[]>(
+        prepare<BindParameters extends unknown[] | {} = unknown[], ReturnObject = unknown>(
             source: string,
-        ): BindParameters extends unknown[] ? Statement<BindParameters> : Statement<[BindParameters]>;
+        ): BindParameters extends unknown[] ? Statement<BindParameters, ReturnObject> : Statement<[BindParameters], ReturnObject>;
         transaction<F extends VariableArgFunction>(fn: F): Transaction<F>;
         exec(source: string): this;
         pragma(source: string, options?: Database.PragmaOptions): unknown;
